version: "3.7"
services:
  app:
    build:
      args:
        uname: ${PHP_UNAME}
        uid: ${PHP_UID}
        gid: ${PHP_GID}
      context: ./services/app
    container_name: ${PROJECT_NAME}_app
    image: ${PROJECT_NAME}_php
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./services/app/php.ini:/usr/local/etc/php/php.ini
      - ../:/var/www
    environment:
      COMPOSER_MEMORY_LIMIT: 3G
      XDEBUG_CONFIG: client_host=${XDEBUG_REMOTE_HOST} client_port=${XDEBUG_STORM_PORT}
      PHP_IDE_CONFIG: serverName=${XDEBUG_STORM_SERVER_NAME}
    networks:
      - main_network

  schedule_worker:
    image: ${PROJECT_NAME}_php
    container_name: ${PROJECT_NAME}_schedule_worker
    restart: unless-stopped
    command: php artisan schedule:work
    working_dir: /var/www/
    volumes:
      - ../:/var/www
    networks:
      - main_network
    depends_on:
      - app

  queue_worker:
    image: ${PROJECT_NAME}_php
    container_name: ${PROJECT_NAME}_queue_worker
    restart: unless-stopped
    command: php artisan queue:listen --tries=1 --timeout=9000 --memory 1024
    working_dir: /var/www/
    volumes:
      - ../:/var/www
    networks:
      - main_network
    depends_on:
      - app
  db:
    image: postgres:13-alpine
    restart: unless-stopped
    container_name: ${PROJECT_NAME}_db
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_LOCAL_PORT}:5432
    volumes:
      - ./services/database/dump:/var/lib/postgresql/data
    networks:
      - main_network

  test_db:
    image: postgres:13-alpine
    restart: unless-stopped
    container_name: ${PROJECT_NAME}_test_db
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${TEST_DB_LOCAL_PORT}:5432
    networks:
      - main_network

  redis:
    image: redis:6.2-alpine
    container_name: ${PROJECT_NAME}_redis
    restart: unless-stopped
    ports:
      - ${REDIS_LOCAL_PORT}:6379
    networks:
      - main_network

  rabbit:
    image: rabbitmq:3.8.9
    container_name: ${PROJECT_NAME}_rabbit
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    volumes:
      - ./services/rabbit/data:/var/lib/rabbitmq/
    networks:
      - main_network

  webserver:
    image: nginx:1.19-alpine
    restart: unless-stopped
    container_name: ${PROJECT_NAME}_webserver
    ports:
      - ${WEB_SERVER_LOCAL_PORT}:80
    volumes:
      - ../public:/var/www/public
      - ./services/nginx:/etc/nginx/conf.d
    networks:
      - main_network
    depends_on:
      - app
      - db
      - redis
      - rabbit
      - queue_worker

networks:
  main_network:
    driver: bridge
    name: ${PROJECT_NAME}_main_network
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET_IP}/${SUBNET_MASK}
